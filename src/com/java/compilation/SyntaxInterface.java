package com.java.compilation;


public interface SyntaxInterface {
    void PROGRAM() throws Exception;
    void PROGRAM2() throws Exception;
    void EXTERNAL_DECLARATION()throws Exception;
    void FUNCTION_DEFINITION()throws Exception;
    void PARAMETER_DECLARATION()throws Exception;
    void PLUS_PARAMETRES()throws Exception;
    void DECLARATION()throws Exception;
    void DECLARATION2()throws Exception;
    void VALUE()throws Exception;
    void APPEL_FONCTION()throws Exception;
    void ARGUMENT_LIST()throws Exception;
    void VALUE_EPSILON()throws Exception;
    void COMPOUND_STATEMENT()throws Exception;
    void STATEMENT()throws Exception;
    void EXPRESSION_STATEMENT()throws Exception;
    void EXPRESSION_STATEMENT2()throws Exception;
    void CONDITIONAL_STATEMENT()throws Exception;
    void SI_STATEMENT()throws Exception;
    void SINONSTATEMENT()throws Exception;
    void SELON_STATEMENT()throws Exception;
    void SELON_FACTORI()throws Exception;
    void CASE()throws Exception;
    void LOOP_STATEMENT()throws Exception;
    void TANQUE_STATEMENT()throws Exception;
    void POUR_STATEMENT()throws Exception;
    void REPETER_STATEMENT()throws Exception;
    void INITIALISATION_EXPRESSION()throws Exception;
    void AUTRE_INITIALISATIONS()throws Exception;
    void AFFECTATION_EXPRESSION()throws Exception;
    void AFFECTATION_EXPRESSION2()throws Exception;
    void TEST_EXPRESSION()throws Exception;
    void LOGICAL_OU_EXPRESSION()throws Exception;
    void LOGICAL_OU_EXPRESSION2()throws Exception;
    void LOGICAL_ET_EXPRESSION() throws  Exception;
    void LOGICAL_ET_EXPRESSION2() throws  Exception;
    void EQUALITY_EXPRESSION()throws Exception;
    void EQUALITY_EXPRESSION2()throws Exception;
    void RELATIONAL_EXPRESSION()throws Exception;
    void RELATIONAL_EXPRESSION2()throws Exception;
    void ADDITIVE_EXPRESSION()throws Exception;
    void ADDITIVE_EXPRESSION2()throws Exception;
    void MULTIPLICATIVE_EXPRESSION()throws Exception;
    void MULTIPLICATIVE_EXPRESSION2()throws Exception;
    void POSTFIX_EXPRESSION()throws Exception;
    void POSTFIX_EXPRESSION2()throws Exception;
    void IDENTIFIER2()throws Exception;
    void TAB_DIM_MULT()throws Exception;
    void TAB_FACTOR()throws Exception;
    void RETURN_STATEMENT()throws Exception;
    void VAL_RETOURNER()throws Exception;
    void TYPE_SPECIFIER()throws Exception;
}
